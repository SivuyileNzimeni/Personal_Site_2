---
title: "2022 Eskom Unavailabe Capacity"
image: "./Eskom_Logo.jpg"
date: "September 22,2022"
author: "Sivuyile Nzimeni"
description: "Rolling Blackouts have been a staple of the South African economy since 2008. In this post, we visualise the an aggregate of Eskom's unavailable capacity variables."
categories: [news,API,visualisation]
listing:
  contents: post
execute: 
  echo: false
  warning: false
bibliography: references.bib
---

# INTRODUCTION

In late 2007, Eskom- South Africa's electricity public utility, announced a rolling Blackout programme to mitigate the risk of a national electricity grid collapse. Fifteen years later, the programme, euphemistically named 'loadshedding', persists. The energy provider has failed to provide a sufficient supply of energy to meet demand in their domestic markets. In fact, according to @bloomberg the energy crisis has worsened, 2022 has already had 100 days of rolling Blackouts.

Of course, there are a plethora of reasons that explain the crisis including, corruption, political interference, political inaction, poor corporate governance, financial mismanagement and many others (see @grootes2019 ). With the aforementioned context in mind, it worth exploring some data to form a more comprehensive understanding of the status of energy supply in the country.

## ESKOM Data Portal

Fortunately, the state-owned institution has a data portal replete with a data dictionary, data visualisation and data exporting functionality. Additionally, obtaining the bulk data export is take a few seconds. Ultimately, a person can access data from Eskom for the previous five years.

```{r setup,include=FALSE}
knitr::opts_chunk$set(echo = FALSE,
                      message = FALSE,
                      warning = FALSE)
library(tidyverse)
library(janitor)
library(lubridate)
library(ggthemes)
library(tidyquant)
```

The first task of analysing the dataset is to understand it's structure. In the Eskom bulk data contains several dimensions including energy generation, energy generation sources, energy demand and energy supply and importantly Capacity Loss data. Capacity Loss is measured by numerous variables depending on the type of loss. Below, the Eskom Data Portal provides an glossary of variable definitions. This analysis will focus on Capacity Loss Factor which is a measure of unavailable energy capacity.

```{r Data_Import}
#| echo: true
Eskom_Data <- read_csv(file ="./ESK2567.csv") |> 
  clean_names() |> 
  dplyr::mutate(date_time_hour_beginning = ymd_hms(date_time_hour_beginning)) |>
  filter(date_time_hour_beginning <= Sys.Date())
```

1.  **Total Planned Capability Loss Factor**: the ratio between the *unavailable energy* of the *units* that are *out on planned maintenance* over a period *compared to the total net installed capacity* of all units over the same period.
2.  **Total Unplanned Capability Loss Factor**: the ratio between the *unavailable energy* of the units that are *out on unplanned outages* over a period compared to the total installed capacity of all units over the same period.
3.  **Total Other Capability Loss Factor**: the ratio between the *unavailable energy* of the units *that cannot be dispatched*, *due to constraints out of the power station management control*, over a period over a period compared to the *total net install capacity of all units* over the same period.

Based on the variable definitions above, we can observe a number of important aspects. First, the Capacity Loss Factor, is differentiated between planned and unplanned, failures to power station management control compared to the total net install capacity of all units. In essence is each variable, is a ratio between available and unavailable capacity. It is also important to highlight the `date_time_hour_beginning` variable, an hourly update of capacity availability.

```{r Unavailable_Cap}
#| include: true
Unavailable_Capacity <- Eskom_Data[,c(grep("clf|date_time_hour_beginning",names(Eskom_Data)))]|>
  mutate(unavailable_capacity_loss = total_pclf+total_uclf+total_oclf,
         date = date(date_time_hour_beginning))

Unavailable_Capacity <- split(Unavailable_Capacity,Unavailable_Capacity$date)

Unavailable_Capacity <- lapply(Unavailable_Capacity,data.frame)
```

## CANDLES

Visualising a large time-series dataset is challenging. Fortunately, the world of finance has solved this problem. Candlestick charts are popular financial charts which provide a succinct view of daily share price movement. They provide a daily distribution of share price activity, i.e, candle charts are modified small box plots. As usual, @wickham2022 's set of packages have all the tools required to clean data and visualise the data. In this case, @dancho2022 's `tidyquant` package offers `geom_candlestick` function which coupled with `ggplot2` can help render candlestick charts. Prior to plotting the visualisation, we create a data.frame with all required columns, namely, Unavailable Capacity Loss Factor at Open, Low and High.

In the code chunk below, we create function which takes a function, finds all the unique date in the dataset along with the variables required to plot the candlestick chart. The function returns a data.frame. The `candle_data` function is applied to the list of unique dates through `lapply` and `do.call` to finalise the dataset.

```{r Data_Extractor}
#| include: true
candle_data <- function(a_df){
  date <- a_df$date |> unique()
  Open <- a_df[a_df$date_time_hour_beginning == min(a_df$date_time_hour_beginning),"unavailable_capacity_loss"][1]
  Close <- a_df[a_df$date_time_hour_beginning == max(a_df$date_time_hour_beginning),"unavailable_capacity_loss"][1]
  Low <- a_df[a_df$unavailable_capacity_loss==min(a_df$unavailable_capacity_loss),"unavailable_capacity_loss"][1]
  High <- a_df[a_df$unavailable_capacity_loss == max(a_df$unavailable_capacity_loss),"unavailable_capacity_loss"][1]
  new_data <-  data.frame(date,
             Open,
             Close,
             Low,
             High)
  return(new_data)}

Candles <- lapply(Unavailable_Capacity,candle_data)
Candles <- do.call(bind_rows,Candles)

Candles <- Candles |> 
  mutate(across(where(is.double),
                .fns = round))
Candles$date <- ymd(Candles$date)
```

### THESE CANDLESTICKS DON'T REQUIRE LOADSHEDDING

```{r Data_Viz}
#| include: true
#| fig-alt: 2018 - 2022 Unavailable Capacity Loss Factor candlestick chart illustrating new highs in unavailable throughout the period to 2022. 
Candles |>
  na.omit() |> 
  ggplot(aes(x=date, y = Close))+
  geom_candlestick(
    aes(open = Open, high = High, low = Low, close = Close))+
  scale_x_date(breaks="9 month")+
  labs(title = "2018 - 2022 Unavailable Capacity Loss Factor",
       subtitle = paste0("Unavailable Capacity Loss Factor: aggregate of total planned capacity loss factor,\n total unplanned capacity loss factor\n and total other capacity loss factor"),
       y = "UCLF at Close",
       x= "Date",
       caption = paste0("UCLF Close is defined as the last loss factor on the day."))+
  theme_clean()+
  theme(plot.title = element_text(hjust=0.5,face = "bold"),
        plot.subtitle = element_text(hjust=0.5,size=8,
                                     face = "italic"),
        plot.caption = element_text(hjust=0.5,face="italic",
                                    size = 6),
        panel.background = NULL)
```

There are many complicated ways to analyse candlestick charts, that is a discussion for another day. For now, we are interested in tracking the general direction of the Unavailable Capacity Loss Factor. In short, the capacity unavailability has been increasing from 2018 to 2022. Throughout the period, there are new highs in unavailability indicating a worsening situation. If we zoom into 2022, the trend continues, confirming the depths of South Africa's energy crisis.

```{r 2022_Zoom}
#| include: true
#| fig-alt: 2022 Unavailable Loss Factor candlestick chart for the period June 2022 to September 2022. In line with the earlier plot, there are new highs in the period for Unavailable Capacity Loss Factor indicator.
Candles |>
  na.omit() |> 
  filter(date > ymd("2022-06-01")) |> 
  ggplot(aes(x=date, y = Close))+
  geom_candlestick(
    aes(open = Open, high = High, low = Low, close = Close))+
  scale_x_date(breaks="1 month")+
   labs(title = "2022 Unavailable Capacity Loss Factor",
       subtitle = paste0("Unavailable Capacity Loss Factor: aggregate of total planned capacity loss factor,\n total unplanned capacity loss factor\n and total other capacity loss factor"),
       y = "UCLF at Close",
       x= "Date",
       caption = paste0("UCLF Close is defined as the last loss factor on the day."))+
  theme_clean()+
  theme(plot.title = element_text(hjust=0.5,face = "bold"),
        plot.subtitle = element_text(hjust=0.5,size=8,
                                     face = "italic"),
        plot.caption = element_text(hjust=0.5,face="italic",
                                    size = 6),
        panel.background = NULL)
```

# CONCLUSION

In this post, we visualised data Capacity Loss Factor data from Eskom. The goal was visualisation, a more detailed analysis would employ time series analysis approaches such as Wavelet, Long-Term Memory Processes and myriad of other modelling approaches. @woodwardwayne provide a detailed treatment of applied time series analysis in R. Fortunately, the energy crisis at Eskom is sufficiently glaring as to require no sophisticated analysis.
